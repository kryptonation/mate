"""ledger models update

Revision ID: 0381c25211ad
Revises: be828537f9d3
Create Date: 2025-10-25 04:49:31.687650

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '0381c25211ad'
down_revision: Union[str, Sequence[str], None] = 'be828537f9d3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ledger_balances',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('balance_id', sa.String(length=64), nullable=False, comment='Unique balance identifier (e.g., BAL-RPR-20251021-001234)'),
    sa.Column('category', sa.Enum('Lease', 'Repair', 'Loan', 'EZPass', 'PVB', 'TLC', 'Taxes', 'Misc', 'Deposit', name='balance_category_enum'), nullable=False, comment='Obligation type (no Earnings in balances)'),
    sa.Column('driver_id', sa.Integer(), nullable=False, comment='Driver reference (required)'),
    sa.Column('vehicle_id', sa.Integer(), nullable=True, comment='Vehicle reference'),
    sa.Column('vin', sa.String(length=18), nullable=True, comment='Vehicle VIN'),
    sa.Column('plate', sa.String(length=16), nullable=True, comment='Vehicle plate'),
    sa.Column('medallion_id', sa.Integer(), nullable=True, comment='Medallion reference'),
    sa.Column('lease_id', sa.Integer(), nullable=True, comment='Lease reference'),
    sa.Column('reference_id', sa.String(length=128), nullable=False, comment='Source obligation (Repair Invoice ID, Loan ID, Toll ID, Ticket ID, etc.)'),
    sa.Column('reference_type', sa.String(length=32), nullable=True, comment='Type of source for clarity'),
    sa.Column('original_amount', sa.Numeric(precision=12, scale=2), nullable=False, comment='Total obligation from source (immutable)'),
    sa.Column('prior_balance', sa.Numeric(precision=12, scale=2), nullable=False, comment='Carried over unpaid portion from previous cycle(s)'),
    sa.Column('payment', sa.Numeric(precision=12, scale=2), nullable=False, comment='Amount settled this cycle'),
    sa.Column('balance', sa.Numeric(precision=12, scale=2), nullable=False, comment='Remaining unpaid portion (updated after each payment/allocation)'),
    sa.Column('applied_payment_refs', sa.Text(), nullable=True, comment='JSON array of payment IDs applied (Interim Payment ID, Earnings Batch ID)'),
    sa.Column('status', sa.Enum('Open', 'Closed', name='balance_status_enum'), nullable=False, comment='OPEN = unpaid, CLOSED = fully settled (Balance = 0)'),
    sa.Column('obligation_date', sa.Date(), nullable=True, comment='Date obligation was created'),
    sa.Column('due_date', sa.Date(), nullable=True, comment='Due date for payment'),
    sa.Column('closed_on', sa.DateTime(), nullable=True, comment='When balance was fully settled'),
    sa.Column('updated_on', sa.DateTime(), nullable=False, comment='Timestamp of last update'),
    sa.Column('description', sa.Text(), nullable=True, comment='Human-readable description'),
    sa.Column('is_archived', sa.Boolean(), nullable=True, comment='Flag indicating if the record is archived'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='Flag to keep track of record is active or not'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='User who created this record'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='User who last modified this record'),
    sa.Column('created_on', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='Timestamp when this record was created'),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['driver_id'], ['drivers.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['lease_id'], ['leases.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['medallion_id'], ['medallions.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['modified_by'], ['users.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['vehicle_id'], ['vehicles.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_balance_category_driver', 'ledger_balances', ['category', 'driver_id'], unique=False)
    op.create_index('idx_balance_driver_category_status', 'ledger_balances', ['driver_id', 'category', 'status'], unique=False)
    op.create_index('idx_balance_driver_status', 'ledger_balances', ['driver_id', 'status'], unique=False)
    op.create_index('idx_balance_reference', 'ledger_balances', ['reference_type', 'reference_id'], unique=False)
    op.create_index('idx_balance_status_date', 'ledger_balances', ['status', 'obligation_date'], unique=False)
    op.create_index(op.f('ix_ledger_balances_balance'), 'ledger_balances', ['balance'], unique=False)
    op.create_index(op.f('ix_ledger_balances_balance_id'), 'ledger_balances', ['balance_id'], unique=True)
    op.create_index(op.f('ix_ledger_balances_category'), 'ledger_balances', ['category'], unique=False)
    op.create_index(op.f('ix_ledger_balances_driver_id'), 'ledger_balances', ['driver_id'], unique=False)
    op.create_index(op.f('ix_ledger_balances_due_date'), 'ledger_balances', ['due_date'], unique=False)
    op.create_index(op.f('ix_ledger_balances_id'), 'ledger_balances', ['id'], unique=False)
    op.create_index(op.f('ix_ledger_balances_lease_id'), 'ledger_balances', ['lease_id'], unique=False)
    op.create_index(op.f('ix_ledger_balances_medallion_id'), 'ledger_balances', ['medallion_id'], unique=False)
    op.create_index(op.f('ix_ledger_balances_obligation_date'), 'ledger_balances', ['obligation_date'], unique=False)
    op.create_index(op.f('ix_ledger_balances_plate'), 'ledger_balances', ['plate'], unique=False)
    op.create_index(op.f('ix_ledger_balances_reference_id'), 'ledger_balances', ['reference_id'], unique=False)
    op.create_index(op.f('ix_ledger_balances_status'), 'ledger_balances', ['status'], unique=False)
    op.create_index(op.f('ix_ledger_balances_updated_on'), 'ledger_balances', ['updated_on'], unique=False)
    op.create_index(op.f('ix_ledger_balances_vehicle_id'), 'ledger_balances', ['vehicle_id'], unique=False)
    op.create_index(op.f('ix_ledger_balances_vin'), 'ledger_balances', ['vin'], unique=False)
    op.create_table('ledger_postings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('posting_id', sa.String(length=64), nullable=False, comment='Unique posting identifier (e.g., POST-20251021-001234)'),
    sa.Column('category', sa.Enum('Lease', 'Repair', 'Loan', 'EZPass', 'PVB', 'TLC', 'Taxes', 'Misc', 'Earnings', 'InterimPayment', 'Deposit', name='ledger_category_enum'), nullable=False, comment='Obligation or earning type'),
    sa.Column('entry_type', sa.Enum('Debit', 'Credit', name='ledger_entry_type_enum'), nullable=False, comment='DEBIT = obligation, CREDIT = earning/payment'),
    sa.Column('amount', sa.Numeric(precision=12, scale=2), nullable=False, comment='Dollar value (always positive; entry_type determines debit/credit)'),
    sa.Column('driver_id', sa.Integer(), nullable=True, comment='Driver reference'),
    sa.Column('vehicle_id', sa.Integer(), nullable=True, comment='Vehicle reference'),
    sa.Column('vin', sa.String(length=17), nullable=True, comment='Vehicle VIN for filtering/reconciliation'),
    sa.Column('plate', sa.String(length=16), nullable=True, comment='Vehicle plate for filtering/reconciliation'),
    sa.Column('medallion_id', sa.Integer(), nullable=True, comment='Medallion reference'),
    sa.Column('lease_id', sa.Integer(), nullable=True, comment='Lease reference'),
    sa.Column('reference_id', sa.String(length=128), nullable=False, comment='Source record ID (Lease ID, Repair Invoice ID, Loan ID, Trip ID, etc.)'),
    sa.Column('reference_type', sa.String(length=32), nullable=True, comment='Type of source record for clarity'),
    sa.Column('status', sa.Enum('Posted', 'Voided', name='ledger_status_enum'), nullable=False, comment='POSTED = active, VOIDED = neutralized by reversal'),
    sa.Column('voided_by_posting_id', sa.String(length=64), nullable=True, comment='Posting ID that voided this entry'),
    sa.Column('posted_on', sa.DateTime(), nullable=False, comment='Timestamp when entry was posted'),
    sa.Column('transaction_date', sa.Date(), nullable=True, comment='Business date of the transaction'),
    sa.Column('description', sa.Text(), nullable=True, comment='Human-readable description'),
    sa.Column('is_archived', sa.Boolean(), nullable=True, comment='Flag indicating if the record is archived'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='Flag to keep track of record is active or not'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='User who created this record'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='User who last modified this record'),
    sa.Column('created_on', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='Timestamp when this record was created'),
    sa.Column('updated_on', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='Timestamp when this record was last updated'),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['driver_id'], ['drivers.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['lease_id'], ['leases.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['medallion_id'], ['medallions.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['modified_by'], ['users.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['vehicle_id'], ['vehicles.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_posting_category_driver', 'ledger_postings', ['category', 'driver_id'], unique=False)
    op.create_index('idx_posting_driver_date', 'ledger_postings', ['driver_id', 'transaction_date'], unique=False)
    op.create_index('idx_posting_reference', 'ledger_postings', ['reference_type', 'reference_id'], unique=False)
    op.create_index('idx_posting_status_date', 'ledger_postings', ['status', 'posted_on'], unique=False)
    op.create_index(op.f('ix_ledger_postings_category'), 'ledger_postings', ['category'], unique=False)
    op.create_index(op.f('ix_ledger_postings_driver_id'), 'ledger_postings', ['driver_id'], unique=False)
    op.create_index(op.f('ix_ledger_postings_id'), 'ledger_postings', ['id'], unique=False)
    op.create_index(op.f('ix_ledger_postings_lease_id'), 'ledger_postings', ['lease_id'], unique=False)
    op.create_index(op.f('ix_ledger_postings_medallion_id'), 'ledger_postings', ['medallion_id'], unique=False)
    op.create_index(op.f('ix_ledger_postings_plate'), 'ledger_postings', ['plate'], unique=False)
    op.create_index(op.f('ix_ledger_postings_posted_on'), 'ledger_postings', ['posted_on'], unique=False)
    op.create_index(op.f('ix_ledger_postings_posting_id'), 'ledger_postings', ['posting_id'], unique=True)
    op.create_index(op.f('ix_ledger_postings_reference_id'), 'ledger_postings', ['reference_id'], unique=False)
    op.create_index(op.f('ix_ledger_postings_status'), 'ledger_postings', ['status'], unique=False)
    op.create_index(op.f('ix_ledger_postings_transaction_date'), 'ledger_postings', ['transaction_date'], unique=False)
    op.create_index(op.f('ix_ledger_postings_vehicle_id'), 'ledger_postings', ['vehicle_id'], unique=False)
    op.create_index(op.f('ix_ledger_postings_vin'), 'ledger_postings', ['vin'], unique=False)
    op.drop_index(op.f('ix_ledger_entries_id'), table_name='ledger_entries')
    op.drop_table('ledger_entries')
    op.drop_index(op.f('ix_daily_receipts_id'), table_name='daily_receipts')
    op.drop_table('daily_receipts')
    op.drop_index(op.f('ix_report_logs_id'), table_name='report_logs')
    op.drop_table('report_logs')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('report_logs',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('report_type', mysql.VARCHAR(length=50), nullable=False),
    sa.Column('filename', mysql.VARCHAR(length=255), nullable=False),
    sa.Column('file_key', mysql.VARCHAR(length=255), nullable=False),
    sa.Column('status', mysql.VARCHAR(length=54), nullable=True),
    sa.Column('is_autormated', mysql.TINYINT(display_width=1), autoincrement=False, nullable=True),
    sa.Column('error_message', mysql.VARCHAR(length=255), nullable=True),
    sa.Column('generated_at', mysql.DATETIME(), nullable=True),
    sa.Column('is_archived', mysql.TINYINT(display_width=1), autoincrement=False, nullable=True, comment='Flag indicating if the record is archived'),
    sa.Column('is_active', mysql.TINYINT(display_width=1), autoincrement=False, nullable=True, comment='Flag to keep track of record is active or not'),
    sa.Column('created_by', mysql.INTEGER(), autoincrement=False, nullable=True, comment='User who created this record'),
    sa.Column('modified_by', mysql.INTEGER(), autoincrement=False, nullable=True, comment='User who last modified this record'),
    sa.Column('created_on', mysql.DATETIME(), server_default=sa.text('(now())'), nullable=True, comment='Timestamp when this record was created'),
    sa.Column('updated_on', mysql.DATETIME(), server_default=sa.text('(now())'), nullable=True, comment='Timestamp when this record was last updated'),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name=op.f('report_logs_ibfk_1'), onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['modified_by'], ['users.id'], name=op.f('report_logs_ibfk_2'), onupdate='CASCADE', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_report_logs_id'), 'report_logs', ['id'], unique=False)
    op.create_table('daily_receipts',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('driver_id', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('vehicle_id', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('medallion_id', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('lease_id', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('receipt_number', mysql.VARCHAR(length=255), nullable=False),
    sa.Column('period_start', mysql.DATETIME(), nullable=False),
    sa.Column('period_end', mysql.DATETIME(), nullable=False),
    sa.Column('cc_earnings', mysql.FLOAT(), nullable=True),
    sa.Column('cash_earnings', mysql.FLOAT(), nullable=True),
    sa.Column('tips', mysql.FLOAT(), nullable=True),
    sa.Column('lease_due', mysql.FLOAT(), nullable=True),
    sa.Column('ezpass_due', mysql.FLOAT(), nullable=True),
    sa.Column('pvb_due', mysql.FLOAT(), nullable=True),
    sa.Column('curb_due', mysql.FLOAT(), nullable=True),
    sa.Column('manual_fee', mysql.FLOAT(), nullable=True),
    sa.Column('incentives', mysql.FLOAT(), nullable=True),
    sa.Column('cash_paid', mysql.FLOAT(), nullable=True),
    sa.Column('balance', mysql.FLOAT(), nullable=True),
    sa.Column('status', mysql.ENUM('DRAFT', 'FINALIZED', 'PAID', 'VOIDED'), nullable=True),
    sa.Column('ledger_snapshot_id', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('receipt_html_key', mysql.VARCHAR(length=255), nullable=True),
    sa.Column('receipt_pdf_key', mysql.VARCHAR(length=255), nullable=True),
    sa.Column('receipt_excel_key', mysql.VARCHAR(length=255), nullable=True),
    sa.Column('is_archived', mysql.TINYINT(display_width=1), autoincrement=False, nullable=True, comment='Flag indicating if the record is archived'),
    sa.Column('is_active', mysql.TINYINT(display_width=1), autoincrement=False, nullable=True, comment='Flag to keep track of record is active or not'),
    sa.Column('created_by', mysql.INTEGER(), autoincrement=False, nullable=True, comment='User who created this record'),
    sa.Column('modified_by', mysql.INTEGER(), autoincrement=False, nullable=True, comment='User who last modified this record'),
    sa.Column('created_on', mysql.DATETIME(), server_default=sa.text('(now())'), nullable=True, comment='Timestamp when this record was created'),
    sa.Column('updated_on', mysql.DATETIME(), server_default=sa.text('(now())'), nullable=True, comment='Timestamp when this record was last updated'),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name=op.f('daily_receipts_ibfk_1'), onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['driver_id'], ['drivers.id'], name=op.f('daily_receipts_ibfk_2')),
    sa.ForeignKeyConstraint(['lease_id'], ['leases.id'], name=op.f('daily_receipts_ibfk_3')),
    sa.ForeignKeyConstraint(['medallion_id'], ['medallions.id'], name=op.f('daily_receipts_ibfk_4')),
    sa.ForeignKeyConstraint(['modified_by'], ['users.id'], name=op.f('daily_receipts_ibfk_5'), onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['vehicle_id'], ['vehicles.id'], name=op.f('daily_receipts_ibfk_6')),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_daily_receipts_id'), 'daily_receipts', ['id'], unique=False)
    op.create_table('ledger_entries',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('driver_id', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('medallion_id', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('vehicle_id', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('amount', mysql.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('debit', mysql.TINYINT(display_width=1), autoincrement=False, nullable=True),
    sa.Column('description', mysql.VARCHAR(length=255), nullable=True),
    sa.Column('receipt_number', mysql.VARCHAR(length=255), nullable=True),
    sa.Column('transaction_date', sa.DATE(), nullable=True),
    sa.Column('transaction_time', mysql.TIME(), nullable=True),
    sa.Column('source_type', mysql.ENUM('EZPASS', 'PVB', 'CURB', 'LEASE', 'FEE', 'MANUAL_FEE', 'CURB_CARD_TXN', 'DTR', 'OTHERS'), nullable=True),
    sa.Column('source_id', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('ledger_id', mysql.VARCHAR(length=255), nullable=True),
    sa.Column('is_archived', mysql.TINYINT(display_width=1), autoincrement=False, nullable=True, comment='Flag indicating if the record is archived'),
    sa.Column('is_active', mysql.TINYINT(display_width=1), autoincrement=False, nullable=True, comment='Flag to keep track of record is active or not'),
    sa.Column('created_by', mysql.INTEGER(), autoincrement=False, nullable=True, comment='User who created this record'),
    sa.Column('modified_by', mysql.INTEGER(), autoincrement=False, nullable=True, comment='User who last modified this record'),
    sa.Column('created_on', mysql.DATETIME(), server_default=sa.text('(now())'), nullable=True, comment='Timestamp when this record was created'),
    sa.Column('updated_on', mysql.DATETIME(), server_default=sa.text('(now())'), nullable=True, comment='Timestamp when this record was last updated'),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name=op.f('ledger_entries_ibfk_1'), onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['driver_id'], ['drivers.id'], name=op.f('ledger_entries_ibfk_2')),
    sa.ForeignKeyConstraint(['medallion_id'], ['medallions.id'], name=op.f('ledger_entries_ibfk_3')),
    sa.ForeignKeyConstraint(['modified_by'], ['users.id'], name=op.f('ledger_entries_ibfk_4'), onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['vehicle_id'], ['vehicles.id'], name=op.f('ledger_entries_ibfk_5')),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_ledger_entries_id'), 'ledger_entries', ['id'], unique=False)
    op.drop_index(op.f('ix_ledger_postings_vin'), table_name='ledger_postings')
    op.drop_index(op.f('ix_ledger_postings_vehicle_id'), table_name='ledger_postings')
    op.drop_index(op.f('ix_ledger_postings_transaction_date'), table_name='ledger_postings')
    op.drop_index(op.f('ix_ledger_postings_status'), table_name='ledger_postings')
    op.drop_index(op.f('ix_ledger_postings_reference_id'), table_name='ledger_postings')
    op.drop_index(op.f('ix_ledger_postings_posting_id'), table_name='ledger_postings')
    op.drop_index(op.f('ix_ledger_postings_posted_on'), table_name='ledger_postings')
    op.drop_index(op.f('ix_ledger_postings_plate'), table_name='ledger_postings')
    op.drop_index(op.f('ix_ledger_postings_medallion_id'), table_name='ledger_postings')
    op.drop_index(op.f('ix_ledger_postings_lease_id'), table_name='ledger_postings')
    op.drop_index(op.f('ix_ledger_postings_id'), table_name='ledger_postings')
    op.drop_index(op.f('ix_ledger_postings_driver_id'), table_name='ledger_postings')
    op.drop_index(op.f('ix_ledger_postings_category'), table_name='ledger_postings')
    op.drop_index('idx_posting_status_date', table_name='ledger_postings')
    op.drop_index('idx_posting_reference', table_name='ledger_postings')
    op.drop_index('idx_posting_driver_date', table_name='ledger_postings')
    op.drop_index('idx_posting_category_driver', table_name='ledger_postings')
    op.drop_table('ledger_postings')
    op.drop_index(op.f('ix_ledger_balances_vin'), table_name='ledger_balances')
    op.drop_index(op.f('ix_ledger_balances_vehicle_id'), table_name='ledger_balances')
    op.drop_index(op.f('ix_ledger_balances_updated_on'), table_name='ledger_balances')
    op.drop_index(op.f('ix_ledger_balances_status'), table_name='ledger_balances')
    op.drop_index(op.f('ix_ledger_balances_reference_id'), table_name='ledger_balances')
    op.drop_index(op.f('ix_ledger_balances_plate'), table_name='ledger_balances')
    op.drop_index(op.f('ix_ledger_balances_obligation_date'), table_name='ledger_balances')
    op.drop_index(op.f('ix_ledger_balances_medallion_id'), table_name='ledger_balances')
    op.drop_index(op.f('ix_ledger_balances_lease_id'), table_name='ledger_balances')
    op.drop_index(op.f('ix_ledger_balances_id'), table_name='ledger_balances')
    op.drop_index(op.f('ix_ledger_balances_due_date'), table_name='ledger_balances')
    op.drop_index(op.f('ix_ledger_balances_driver_id'), table_name='ledger_balances')
    op.drop_index(op.f('ix_ledger_balances_category'), table_name='ledger_balances')
    op.drop_index(op.f('ix_ledger_balances_balance_id'), table_name='ledger_balances')
    op.drop_index(op.f('ix_ledger_balances_balance'), table_name='ledger_balances')
    op.drop_index('idx_balance_status_date', table_name='ledger_balances')
    op.drop_index('idx_balance_reference', table_name='ledger_balances')
    op.drop_index('idx_balance_driver_status', table_name='ledger_balances')
    op.drop_index('idx_balance_driver_category_status', table_name='ledger_balances')
    op.drop_index('idx_balance_category_driver', table_name='ledger_balances')
    op.drop_table('ledger_balances')
    # ### end Alembic commands ###
