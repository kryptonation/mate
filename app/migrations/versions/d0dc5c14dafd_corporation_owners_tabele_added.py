"""corporation owners tabele added

Revision ID: d0dc5c14dafd
Revises: 1adc39908442
Create Date: 2025-10-05 21:17:29.931786

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = 'd0dc5c14dafd'
down_revision: Union[str, Sequence[str], None] = '1adc39908442'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - modified for MySQL ###

    # Step 1: Create the new table
    op.create_table(
        'corporation_owners',
        sa.Column('id', sa.Integer(), nullable=False, comment='Primary Key for Corporation Owners'),
        sa.Column('corporation_id', sa.Integer(), nullable=False, comment='Foreign Key to Corporation table'),
        sa.Column('name', sa.String(length=255), nullable=True, comment='Name of the Corporation Owner'),
        sa.Column('owner_type', sa.String(length=25), nullable=True, comment='Owner Type: manager or member'),
        sa.Column('owner_id', sa.Integer(), nullable=True, comment='Owner Id from Individual table'),
        sa.Column('is_payee', sa.Boolean(), nullable=True, comment='Indicates if the Corporation Owner is a Payee'),
        sa.Column('is_primary_contact', sa.Boolean(), nullable=True, comment='Indicates if the Corporation Owner is the Primary Contact'),
        sa.Column('is_authorized_signatory', sa.Boolean(), nullable=True, comment='Indicates if the Corporation Owner is an Authorized Signatory'),
        sa.Column('is_archived', sa.Boolean(), nullable=True, comment='Flag indicating if the record is archived'),
        sa.Column('is_active', sa.Boolean(), nullable=True, comment='Flag to keep track of record is active or not'),
        sa.Column('created_by', sa.Integer(), nullable=True, comment='User who created this record'),
        sa.Column('modified_by', sa.Integer(), nullable=True, comment='User who last modified this record'),
        sa.Column('created_on', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='Timestamp when this record was created'),
        sa.Column('updated_on', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='Timestamp when this record was last updated'),
        sa.ForeignKeyConstraint(['corporation_id'], ['corporation.id']),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], onupdate='CASCADE', ondelete='SET NULL'),
        sa.ForeignKeyConstraint(['modified_by'], ['users.id'], onupdate='CASCADE', ondelete='SET NULL'),
        sa.ForeignKeyConstraint(['owner_id'], ['individual.id']),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_corporation_owners_corporation_id'), 'corporation_owners', ['corporation_id'], unique=False)

    op.add_column('corporation', sa.Column('is_holding_entity', sa.Boolean(), nullable=True, comment='Indicates if the Corporation is a Holding Entity'))

    op.drop_constraint(op.f('corporation_ibfk_11'), 'corporation', type_='foreignkey')
    op.drop_constraint(op.f('corporation_ibfk_7'), 'corporation', type_='foreignkey')
    op.drop_constraint(op.f('corporation_ibfk_3'), 'corporation', type_='foreignkey')
    op.drop_constraint(op.f('corporation_ibfk_9'), 'corporation', type_='foreignkey')

    op.drop_index(op.f('ix_corporation_corporate_officer'), table_name='corporation')
    op.drop_index(op.f('ix_corporation_president'), table_name='corporation')
    op.drop_index(op.f('ix_corporation_primary_contact_person_id'), table_name='corporation')
    op.drop_index(op.f('ix_corporation_secretary'), table_name='corporation')


    op.drop_column('corporation', 'corporate_officer')
    op.drop_column('corporation', 'account_id')
    op.drop_column('corporation', 'secretary')
    op.drop_column('corporation', 'primary_contact_person_id')
    op.drop_column('corporation', 'president')

    op.add_column('corporation_payees', sa.Column('payee_type', sa.String(length=25), nullable=True, comment='Payee Type: Individual or Corporation'))
    op.add_column('corporation_payees', sa.Column('individual_id', sa.Integer(), nullable=True, comment='Payee ID: Foreign Key to Individual table based on the Payee Type'))
    op.add_column('corporation_payees', sa.Column('allocation_percentage', sa.Numeric(precision=5, scale=2), nullable=True, comment='Allocation Percentage for the Payee'))
    op.add_column('corporation_payees', sa.Column('corporation_owner_id', sa.Integer(), nullable=True, comment='Payee ID: Foreign Key to Corporation table based on the Payee Type'))

    op.alter_column(
        'corporation_payees',
        'corporation_id',
        existing_type=mysql.INTEGER(),
        nullable=True,
        comment='Payee ID: Foreign Key to Corporation table based on the Payee Type',
        existing_comment='Foreign Key to Corporation table'
    )
    op.create_foreign_key(None, 'corporation_payees', 'individual', ['individual_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'corporation_payees', type_='foreignkey')
    op.alter_column('corporation_payees', 'corporation_id',
               existing_type=mysql.INTEGER(),
               nullable=False,
               comment='Foreign Key to Corporation table',
               existing_comment='Payee ID: Foreign Key to Corporation table based on the Payee Type')
    op.drop_column('corporation_payees', 'allocation_percentage')
    op.drop_column('corporation_payees', 'individual_id')
    op.drop_column('corporation_payees', 'payee_type')
    op.drop_column('corporation_payees', 'corporation_owner_id')
    op.add_column('corporation', sa.Column('president', mysql.INTEGER(), autoincrement=False, nullable=True, comment='Foreign Key to Individual table for president'))
    op.add_column('corporation', sa.Column('primary_contact_person_id', mysql.INTEGER(), autoincrement=False, nullable=True, comment='Foreign Key to Individual table for primary contact person'))
    op.add_column('corporation', sa.Column('secretary', mysql.INTEGER(), autoincrement=False, nullable=True, comment='Foreign Key to Individual table for secretary'))
    op.add_column('corporation', sa.Column('account_id', mysql.VARCHAR(length=255), nullable=True, comment='Account ID for the Corporation'))
    op.add_column('corporation', sa.Column('corporate_officer', mysql.INTEGER(), autoincrement=False, nullable=True, comment='Foreign Key to Individual table for corporate officer'))
    op.create_foreign_key(op.f('corporation_ibfk_9'), 'corporation', 'individual', ['primary_contact_person_id'], ['id'])
    op.create_foreign_key(op.f('corporation_ibfk_3'), 'corporation', 'individual', ['corporate_officer'], ['id'])
    op.create_foreign_key(op.f('corporation_ibfk_7'), 'corporation', 'individual', ['president'], ['id'])
    op.create_foreign_key(op.f('corporation_ibfk_11'), 'corporation', 'individual', ['secretary'], ['id'])
    op.create_index(op.f('ix_corporation_secretary'), 'corporation', ['secretary'], unique=False)
    op.create_index(op.f('ix_corporation_primary_contact_person_id'), 'corporation', ['primary_contact_person_id'], unique=False)
    op.create_index(op.f('ix_corporation_president'), 'corporation', ['president'], unique=False)
    op.create_index(op.f('ix_corporation_corporate_officer'), 'corporation', ['corporate_officer'], unique=False)
    op.drop_column('corporation', 'is_holding_entity')
    op.drop_index(op.f('ix_corporation_owners_corporation_id'), table_name='corporation_owners')
    op.drop_table('corporation_owners')
    # ### end Alembic commands ###
