"""ezpass models refactored

Revision ID: f232c1cc8296
Revises: afbc8a8eed88
Create Date: 2025-10-13 13:36:03.577010

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = 'f232c1cc8296'
down_revision: Union[str, Sequence[str], None] = 'afbc8a8eed88'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('ezpass_logs', 'log_date',
               existing_type=mysql.DATETIME(),
               comment='Date and time of log entry',
               existing_nullable=False)
    op.alter_column('ezpass_logs', 'log_type',
               existing_type=mysql.VARCHAR(length=255),
               type_=sa.String(length=32),
               comment='Type of log entry: Import, Associate, Post',
               existing_nullable=False)
    op.alter_column('ezpass_logs', 'records_impacted',
               existing_type=mysql.INTEGER(),
               comment='Total number of records affected',
               existing_nullable=True)
    op.alter_column('ezpass_logs', 'success_count',
               existing_type=mysql.INTEGER(),
               comment='Number of successfully processed records.',
               existing_nullable=True)
    op.alter_column('ezpass_logs', 'unidentified_count',
               existing_type=mysql.INTEGER(),
               comment='Number of records that could not be processed',
               existing_nullable=True)
    op.alter_column('ezpass_logs', 'status',
               existing_type=mysql.VARCHAR(length=50),
               type_=sa.String(length=48),
               comment='Status: Success, Failure, Partial, Processing',
               existing_nullable=False)
    op.create_index(op.f('ix_ezpass_logs_log_date'), 'ezpass_logs', ['log_date'], unique=False)
    op.add_column('ezpass_transactions', sa.Column('vehicle_class', sa.String(length=24), nullable=True, comment='Class from CSV (vehicle class)'))
    op.alter_column('ezpass_transactions', 'transaction_id',
               existing_type=mysql.VARCHAR(length=64),
               comment='External EZPass transaction ID',
               existing_nullable=True)
    op.alter_column('ezpass_transactions', 'transaction_date',
               existing_type=sa.DATE(),
               comment='Transaction date from CSV',
               existing_comment='Original EZPass transaction date',
               existing_nullable=False)
    op.alter_column('ezpass_transactions', 'transaction_time',
               existing_type=mysql.TIME(),
               comment='Exit Time from CSV',
               existing_nullable=True)
    op.alter_column('ezpass_transactions', 'posting_date',
               existing_type=sa.DATE(),
               comment='Date when transaction was posted to ledger',
               existing_comment='Date when transaction was posted to BATM',
               existing_nullable=True)
    op.alter_column('ezpass_transactions', 'medallion_no',
               existing_type=mysql.VARCHAR(length=20),
               type_=sa.String(length=24),
               comment='Medallion number from active lease',
               existing_comment='Medallion number of the vehicle',
               existing_nullable=True)
    op.alter_column('ezpass_transactions', 'driver_id',
               existing_type=mysql.INTEGER(),
               comment='Associated Driver ID from active lease',
               existing_nullable=True)
    op.alter_column('ezpass_transactions', 'vehicle_id',
               existing_type=mysql.INTEGER(),
               comment='Associated vehicle ID from active lease',
               existing_nullable=True)
    op.alter_column('ezpass_transactions', 'plate_no',
               existing_type=mysql.VARCHAR(length=20),
               type_=sa.String(length=24),
               comment='Tag/Plate # from CSV - used for vehicle matching',
               existing_comment='Plate number of the vehicle',
               existing_nullable=True)
    op.alter_column('ezpass_transactions', 'tag_or_plate',
               existing_type=mysql.VARCHAR(length=30),
               type_=sa.String(length=32),
               comment='Tag or Plate Identifier from CSV',
               existing_nullable=False)
    op.alter_column('ezpass_transactions', 'agency',
               existing_type=mysql.VARCHAR(length=100),
               type_=sa.String(length=128),
               comment='Agency from CSV (toll agency name)',
               existing_nullable=True)
    op.alter_column('ezpass_transactions', 'entry_plaza',
               existing_type=mysql.VARCHAR(length=50),
               type_=sa.String(length=128),
               comment='Entry Plaza from CSV',
               existing_nullable=True)
    op.alter_column('ezpass_transactions', 'exit_plaza',
               existing_type=mysql.VARCHAR(length=50),
               type_=sa.String(length=128),
               comment='Exit Plaza from CSV',
               existing_nullable=True)
    op.alter_column('ezpass_transactions', 'amount',
               existing_type=mysql.DECIMAL(precision=10, scale=2),
               comment='Amount from CSV (transaction amount)',
               existing_nullable=False)
    op.alter_column('ezpass_transactions', 'status',
               existing_type=mysql.VARCHAR(length=50),
               type_=sa.String(length=48),
               comment='Status: Imported, Associated, Posted, Failed',
               existing_comment='Imported, Associated, Posted, Failed',
               existing_nullable=False)
    op.alter_column('ezpass_transactions', 'associate_failed_reason',
               existing_type=mysql.TEXT(),
               comment='Reason for association failure',
               existing_nullable=True)
    op.alter_column('ezpass_transactions', 'post_failed_reason',
               existing_type=mysql.TEXT(),
               comment='Reason for posting failure',
               existing_nullable=True)
    op.alter_column('ezpass_transactions', 'log_id',
               existing_type=mysql.INTEGER(),
               comment='Reference to import log',
               existing_nullable=True)
    op.create_index(op.f('ix_ezpass_transactions_driver_id'), 'ezpass_transactions', ['driver_id'], unique=False)
    op.create_index(op.f('ix_ezpass_transactions_medallion_no'), 'ezpass_transactions', ['medallion_no'], unique=False)
    op.create_index(op.f('ix_ezpass_transactions_posting_date'), 'ezpass_transactions', ['posting_date'], unique=False)
    op.create_index(op.f('ix_ezpass_transactions_status'), 'ezpass_transactions', ['status'], unique=False)
    op.create_index(op.f('ix_ezpass_transactions_transaction_date'), 'ezpass_transactions', ['transaction_date'], unique=False)
    op.create_index(op.f('ix_ezpass_transactions_vehicle_id'), 'ezpass_transactions', ['vehicle_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_ezpass_transactions_vehicle_id'), table_name='ezpass_transactions')
    op.drop_index(op.f('ix_ezpass_transactions_transaction_date'), table_name='ezpass_transactions')
    op.drop_index(op.f('ix_ezpass_transactions_status'), table_name='ezpass_transactions')
    op.drop_index(op.f('ix_ezpass_transactions_posting_date'), table_name='ezpass_transactions')
    op.drop_index(op.f('ix_ezpass_transactions_medallion_no'), table_name='ezpass_transactions')
    op.drop_index(op.f('ix_ezpass_transactions_driver_id'), table_name='ezpass_transactions')
    op.alter_column('ezpass_transactions', 'log_id',
               existing_type=mysql.INTEGER(),
               comment=None,
               existing_comment='Reference to import log',
               existing_nullable=True)
    op.alter_column('ezpass_transactions', 'post_failed_reason',
               existing_type=mysql.TEXT(),
               comment=None,
               existing_comment='Reason for posting failure',
               existing_nullable=True)
    op.alter_column('ezpass_transactions', 'associate_failed_reason',
               existing_type=mysql.TEXT(),
               comment=None,
               existing_comment='Reason for association failure',
               existing_nullable=True)
    op.alter_column('ezpass_transactions', 'status',
               existing_type=sa.String(length=48),
               type_=mysql.VARCHAR(length=50),
               comment='Imported, Associated, Posted, Failed',
               existing_comment='Status: Imported, Associated, Posted, Failed',
               existing_nullable=False)
    op.alter_column('ezpass_transactions', 'amount',
               existing_type=mysql.DECIMAL(precision=10, scale=2),
               comment=None,
               existing_comment='Amount from CSV (transaction amount)',
               existing_nullable=False)
    op.alter_column('ezpass_transactions', 'exit_plaza',
               existing_type=sa.String(length=128),
               type_=mysql.VARCHAR(length=50),
               comment=None,
               existing_comment='Exit Plaza from CSV',
               existing_nullable=True)
    op.alter_column('ezpass_transactions', 'entry_plaza',
               existing_type=sa.String(length=128),
               type_=mysql.VARCHAR(length=50),
               comment=None,
               existing_comment='Entry Plaza from CSV',
               existing_nullable=True)
    op.alter_column('ezpass_transactions', 'agency',
               existing_type=sa.String(length=128),
               type_=mysql.VARCHAR(length=100),
               comment=None,
               existing_comment='Agency from CSV (toll agency name)',
               existing_nullable=True)
    op.alter_column('ezpass_transactions', 'tag_or_plate',
               existing_type=sa.String(length=32),
               type_=mysql.VARCHAR(length=30),
               comment=None,
               existing_comment='Tag or Plate Identifier from CSV',
               existing_nullable=False)
    op.alter_column('ezpass_transactions', 'plate_no',
               existing_type=sa.String(length=24),
               type_=mysql.VARCHAR(length=20),
               comment='Plate number of the vehicle',
               existing_comment='Tag/Plate # from CSV - used for vehicle matching',
               existing_nullable=True)
    op.alter_column('ezpass_transactions', 'vehicle_id',
               existing_type=mysql.INTEGER(),
               comment=None,
               existing_comment='Associated vehicle ID from active lease',
               existing_nullable=True)
    op.alter_column('ezpass_transactions', 'driver_id',
               existing_type=mysql.INTEGER(),
               comment=None,
               existing_comment='Associated Driver ID from active lease',
               existing_nullable=True)
    op.alter_column('ezpass_transactions', 'medallion_no',
               existing_type=sa.String(length=24),
               type_=mysql.VARCHAR(length=20),
               comment='Medallion number of the vehicle',
               existing_comment='Medallion number from active lease',
               existing_nullable=True)
    op.alter_column('ezpass_transactions', 'posting_date',
               existing_type=sa.DATE(),
               comment='Date when transaction was posted to BATM',
               existing_comment='Date when transaction was posted to ledger',
               existing_nullable=True)
    op.alter_column('ezpass_transactions', 'transaction_time',
               existing_type=mysql.TIME(),
               comment=None,
               existing_comment='Exit Time from CSV',
               existing_nullable=True)
    op.alter_column('ezpass_transactions', 'transaction_date',
               existing_type=sa.DATE(),
               comment='Original EZPass transaction date',
               existing_comment='Transaction date from CSV',
               existing_nullable=False)
    op.alter_column('ezpass_transactions', 'transaction_id',
               existing_type=mysql.VARCHAR(length=64),
               comment=None,
               existing_comment='External EZPass transaction ID',
               existing_nullable=True)
    op.drop_column('ezpass_transactions', 'vehicle_class')
    op.drop_index(op.f('ix_ezpass_logs_log_date'), table_name='ezpass_logs')
    op.alter_column('ezpass_logs', 'status',
               existing_type=sa.String(length=48),
               type_=mysql.VARCHAR(length=50),
               comment=None,
               existing_comment='Status: Success, Failure, Partial, Processing',
               existing_nullable=False)
    op.alter_column('ezpass_logs', 'unidentified_count',
               existing_type=mysql.INTEGER(),
               comment=None,
               existing_comment='Number of records that could not be processed',
               existing_nullable=True)
    op.alter_column('ezpass_logs', 'success_count',
               existing_type=mysql.INTEGER(),
               comment=None,
               existing_comment='Number of successfully processed records.',
               existing_nullable=True)
    op.alter_column('ezpass_logs', 'records_impacted',
               existing_type=mysql.INTEGER(),
               comment=None,
               existing_comment='Total number of records affected',
               existing_nullable=True)
    op.alter_column('ezpass_logs', 'log_type',
               existing_type=sa.String(length=32),
               type_=mysql.VARCHAR(length=255),
               comment=None,
               existing_comment='Type of log entry: Import, Associate, Post',
               existing_nullable=False)
    op.alter_column('ezpass_logs', 'log_date',
               existing_type=mysql.DATETIME(),
               comment=None,
               existing_comment='Date and time of log entry',
               existing_nullable=False)
    # ### end Alembic commands ###
