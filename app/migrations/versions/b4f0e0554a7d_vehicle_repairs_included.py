"""Vehicle repairs included

Revision ID: b4f0e0554a7d
Revises: 9fcc32d40891
Create Date: 2025-10-19 05:13:45.463106

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b4f0e0554a7d'
down_revision: Union[str, Sequence[str], None] = '9fcc32d40891'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('repair_invoices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('repair_id', sa.String(length=48), nullable=False, comment='System-generated unique repair ID (e.g., VRPR-2025-001)'),
    sa.Column('invoice_number', sa.String(length=128), nullable=False, comment='Actual invoice number from workshop'),
    sa.Column('invoice_date', sa.Date(), nullable=False, comment='Date repair was billed'),
    sa.Column('vin', sa.String(length=18), nullable=False, comment='Vehicle Identification Number'),
    sa.Column('plate_number', sa.String(length=24), nullable=False, comment='Vehicle plate number'),
    sa.Column('medallion_number', sa.String(length=24), nullable=False, comment='Medallion associated with repair'),
    sa.Column('hack_license_number', sa.String(length=24), nullable=True, comment='TLC license of responsible driver'),
    sa.Column('driver_id', sa.Integer(), nullable=True, comment='Foreign Key to Driver'),
    sa.Column('vehicle_id', sa.Integer(), nullable=False, comment='Foreign Key to verhicles'),
    sa.Column('medallion_id', sa.Integer(), nullable=False, comment='Foreign Key to medallions'),
    sa.Column('lease_id', sa.Integer(), nullable=True, comment='Foreign Key to leases table (if associated with active lease)'),
    sa.Column('workshop_type', sa.Enum('BIG_APPLE', 'EXTERNAL', name='workshoptype', native_enum=False, length=48), nullable=False, comment='Type of workshop (Big Apple / External)'),
    sa.Column('repair_description', sa.Text(), nullable=True, comment='Details of repair work performed'),
    sa.Column('repair_amount', sa.Float(), nullable=False, comment='Total cost of repair invoice'),
    sa.Column('weekly_installment', sa.Float(), nullable=False, comment='Weekly installment amount (from payment matrix)'),
    sa.Column('balance', sa.Float(), nullable=False, comment='Remaining unpaid balance'),
    sa.Column('start_week', sa.Enum('CURRENT', 'NEXT', name='startweekoption', native_enum=False, length=48), nullable=False, comment='When repayment schedule begins'),
    sa.Column('status', sa.Enum('DRAFT', 'OPEN', 'CLOSED', 'HOLD', 'CANCELLED', name='invoicestatus', native_enum=False, length=24), nullable=False, comment='Invoice lifecycle status'),
    sa.Column('is_archived', sa.Boolean(), nullable=True, comment='Flag indicating if the record is archived'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='Flag to keep track of record is active or not'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='User who created this record'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='User who last modified this record'),
    sa.Column('created_on', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='Timestamp when this record was created'),
    sa.Column('updated_on', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='Timestamp when this record was last updated'),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['driver_id'], ['drivers.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['lease_id'], ['leases.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['medallion_id'], ['medallions.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['modified_by'], ['users.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['vehicle_id'], ['vehicles.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_repair_invoice_driver_status', 'repair_invoices', ['driver_id', 'status'], unique=False)
    op.create_index('idx_repair_invoice_medallion_status', 'repair_invoices', ['medallion_id', 'status'], unique=False)
    op.create_index('idx_repair_invoice_unique', 'repair_invoices', ['invoice_number', 'vehicle_id', 'invoice_date'], unique=True)
    op.create_index('idx_repair_invoice_vehicle_date', 'repair_invoices', ['vehicle_id', 'invoice_date'], unique=False)
    op.create_index(op.f('ix_repair_invoices_driver_id'), 'repair_invoices', ['driver_id'], unique=False)
    op.create_index(op.f('ix_repair_invoices_hack_license_number'), 'repair_invoices', ['hack_license_number'], unique=False)
    op.create_index(op.f('ix_repair_invoices_id'), 'repair_invoices', ['id'], unique=False)
    op.create_index(op.f('ix_repair_invoices_invoice_number'), 'repair_invoices', ['invoice_number'], unique=False)
    op.create_index(op.f('ix_repair_invoices_lease_id'), 'repair_invoices', ['lease_id'], unique=False)
    op.create_index(op.f('ix_repair_invoices_medallion_id'), 'repair_invoices', ['medallion_id'], unique=False)
    op.create_index(op.f('ix_repair_invoices_medallion_number'), 'repair_invoices', ['medallion_number'], unique=False)
    op.create_index(op.f('ix_repair_invoices_plate_number'), 'repair_invoices', ['plate_number'], unique=False)
    op.create_index(op.f('ix_repair_invoices_repair_id'), 'repair_invoices', ['repair_id'], unique=True)
    op.create_index(op.f('ix_repair_invoices_status'), 'repair_invoices', ['status'], unique=False)
    op.create_index(op.f('ix_repair_invoices_vehicle_id'), 'repair_invoices', ['vehicle_id'], unique=False)
    op.create_table('repair_installments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('repair_invoice_id', sa.Integer(), nullable=False, comment='Foreign Key to RepairInvoice'),
    sa.Column('installment_id', sa.String(length=48), nullable=False, comment='Unique installment identifier (e.g., VRPR-2025-012-01)'),
    sa.Column('week_start_date', sa.Date(), nullable=False, comment='Start of payment period (Sunday 00:00:00)'),
    sa.Column('week_end_date', sa.Date(), nullable=False, comment='End of payment period (Saturday 23:59:59)'),
    sa.Column('payment_amount', sa.Float(), nullable=False, comment='Installment amount due for this week'),
    sa.Column('prior_balance', sa.Float(), nullable=False, comment='Remaining unpaid balance from earlier cycles'),
    sa.Column('balance', sa.Float(), nullable=False, comment='Remaining unpaid portion after this installment'),
    sa.Column('ledger_posting_ref', sa.String(length=100), nullable=True, comment='Reference to ledger entry (null until posted)'),
    sa.Column('status', sa.Enum('SCHEDULED', 'DUE', 'POSTED', 'PAID', name='installmentstatus', native_enum=False, length=24), nullable=False, comment='Installment lifecycle status'),
    sa.Column('is_archived', sa.Boolean(), nullable=True, comment='Flag indicating if the record is archived'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='Flag to keep track of record is active or not'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='User who created this record'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='User who last modified this record'),
    sa.Column('created_on', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='Timestamp when this record was created'),
    sa.Column('updated_on', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='Timestamp when this record was last updated'),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['modified_by'], ['users.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['repair_invoice_id'], ['repair_invoices.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_repair_installment_invoice_status', 'repair_installments', ['repair_invoice_id', 'status'], unique=False)
    op.create_index('idx_repair_installment_status_week', 'repair_installments', ['status', 'week_start_date'], unique=False)
    op.create_index('idx_repair_installment_week', 'repair_installments', ['week_start_date', 'week_end_date'], unique=False)
    op.create_index(op.f('ix_repair_installments_id'), 'repair_installments', ['id'], unique=False)
    op.create_index(op.f('ix_repair_installments_installment_id'), 'repair_installments', ['installment_id'], unique=True)
    op.create_index(op.f('ix_repair_installments_ledger_posting_ref'), 'repair_installments', ['ledger_posting_ref'], unique=False)
    op.create_index(op.f('ix_repair_installments_repair_invoice_id'), 'repair_installments', ['repair_invoice_id'], unique=False)
    op.create_index(op.f('ix_repair_installments_status'), 'repair_installments', ['status'], unique=False)
    op.create_index(op.f('ix_repair_installments_week_start_date'), 'repair_installments', ['week_start_date'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_repair_installments_week_start_date'), table_name='repair_installments')
    op.drop_index(op.f('ix_repair_installments_status'), table_name='repair_installments')
    op.drop_index(op.f('ix_repair_installments_repair_invoice_id'), table_name='repair_installments')
    op.drop_index(op.f('ix_repair_installments_ledger_posting_ref'), table_name='repair_installments')
    op.drop_index(op.f('ix_repair_installments_installment_id'), table_name='repair_installments')
    op.drop_index(op.f('ix_repair_installments_id'), table_name='repair_installments')
    op.drop_index('idx_repair_installment_week', table_name='repair_installments')
    op.drop_index('idx_repair_installment_status_week', table_name='repair_installments')
    op.drop_index('idx_repair_installment_invoice_status', table_name='repair_installments')
    op.drop_table('repair_installments')
    op.drop_index(op.f('ix_repair_invoices_vehicle_id'), table_name='repair_invoices')
    op.drop_index(op.f('ix_repair_invoices_status'), table_name='repair_invoices')
    op.drop_index(op.f('ix_repair_invoices_repair_id'), table_name='repair_invoices')
    op.drop_index(op.f('ix_repair_invoices_plate_number'), table_name='repair_invoices')
    op.drop_index(op.f('ix_repair_invoices_medallion_number'), table_name='repair_invoices')
    op.drop_index(op.f('ix_repair_invoices_medallion_id'), table_name='repair_invoices')
    op.drop_index(op.f('ix_repair_invoices_lease_id'), table_name='repair_invoices')
    op.drop_index(op.f('ix_repair_invoices_invoice_number'), table_name='repair_invoices')
    op.drop_index(op.f('ix_repair_invoices_id'), table_name='repair_invoices')
    op.drop_index(op.f('ix_repair_invoices_hack_license_number'), table_name='repair_invoices')
    op.drop_index(op.f('ix_repair_invoices_driver_id'), table_name='repair_invoices')
    op.drop_index('idx_repair_invoice_vehicle_date', table_name='repair_invoices')
    op.drop_index('idx_repair_invoice_unique', table_name='repair_invoices')
    op.drop_index('idx_repair_invoice_medallion_status', table_name='repair_invoices')
    op.drop_index('idx_repair_invoice_driver_status', table_name='repair_invoices')
    op.drop_table('repair_invoices')
    # ### end Alembic commands ###
