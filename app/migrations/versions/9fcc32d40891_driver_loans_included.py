"""Driver loans included

Revision ID: 9fcc32d40891
Revises: 3ab11a064903
Create Date: 2025-10-18 14:14:12.982774

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9fcc32d40891'
down_revision: Union[str, Sequence[str], None] = '3ab11a064903'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('driver_loans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('loan_id', sa.String(length=32), nullable=False),
    sa.Column('driver_id', sa.Integer(), nullable=False),
    sa.Column('medallion_id', sa.Integer(), nullable=True),
    sa.Column('lease_id', sa.Integer(), nullable=True),
    sa.Column('loan_amount', sa.Numeric(precision=10, scale=2), nullable=False, comment='Principal loan amount'),
    sa.Column('interest_rate', sa.Numeric(precision=5, scale=2), nullable=False, comment='Annual interest rate percentage'),
    sa.Column('loan_date', sa.Date(), nullable=False, comment='Date when loan was disbursed'),
    sa.Column('start_week', sa.Date(), nullable=False, comment='Sunday of the week when repayments start'),
    sa.Column('purpose', sa.String(length=255), nullable=True, comment='Reason for the loan'),
    sa.Column('notes', sa.Text(), nullable=True, comment='Additional notes about the loan'),
    sa.Column('status', sa.String(length=16), nullable=False, comment='Lifecycle state: Draft, Open, Closed, Hold, Cancelled'),
    sa.Column('total_principal_paid', sa.Numeric(precision=10, scale=2), nullable=False, comment='Total principal paid'),
    sa.Column('total_interest_paid', sa.Numeric(precision=10, scale=2), nullable=False, comment='Total interest paid'),
    sa.Column('outstanding_balance', sa.Numeric(precision=10, scale=2), nullable=False, comment='Remaining principal balance'),
    sa.Column('is_archived', sa.Boolean(), nullable=True, comment='Flag indicating if the record is archived'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='Flag to keep track of record is active or not'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='User who created this record'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='User who last modified this record'),
    sa.Column('created_on', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='Timestamp when this record was created'),
    sa.Column('updated_on', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='Timestamp when this record was last updated'),
    sa.CheckConstraint('interest_rate >= 0 AND interest_rate <= 20', name='check_interest_rate_range'),
    sa.CheckConstraint('loan_amount >= 1', name='check_loan_amount_positive'),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['driver_id'], ['drivers.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['lease_id'], ['leases.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['medallion_id'], ['medallions.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['modified_by'], ['users.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_driver_loan_driver', 'driver_loans', ['driver_id', 'status'], unique=False)
    op.create_index('idx_driver_loan_medallion', 'driver_loans', ['medallion_id'], unique=False)
    op.create_index('idx_driver_loan_status', 'driver_loans', ['status'], unique=False)
    op.create_index(op.f('ix_driver_loans_id'), 'driver_loans', ['id'], unique=False)
    op.create_index(op.f('ix_driver_loans_loan_id'), 'driver_loans', ['loan_id'], unique=True)
    op.create_table('driver_loan_installments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('installment_id', sa.String(length=48), nullable=False),
    sa.Column('loan_id', sa.Integer(), nullable=False, comment='Reference to the parent loan'),
    sa.Column('installment_number', sa.Integer(), nullable=False, comment='Sequential installment number'),
    sa.Column('week_start_date', sa.Date(), nullable=False, comment='Start date of payment period'),
    sa.Column('week_end_date', sa.Date(), nullable=False, comment='End date of payment period'),
    sa.Column('principal_amount', sa.Numeric(precision=10, scale=2), nullable=False, comment='Weekly portion from Loan repayment'),
    sa.Column('interest_amount', sa.Numeric(precision=10, scale=2), nullable=False, comment='Interest accrued for this period'),
    sa.Column('total_due', sa.Numeric(precision=10, scale=2), nullable=False, comment='Total amount due (Principal + Interest)'),
    sa.Column('prior_balance', sa.Numeric(precision=10, scale=2), nullable=False, comment='Remaining unpaid principal from earlier cycles'),
    sa.Column('outstanding_principal', sa.Numeric(precision=10, scale=2), nullable=False, comment='Outstanding principal before this installment'),
    sa.Column('remaining_balance', sa.Numeric(precision=10, scale=2), nullable=False, comment='Remaining principal after this installment'),
    sa.Column('status', sa.String(length=16), nullable=False, comment='Lifecycle state: Scheduled, Due, Posted, Paid'),
    sa.Column('posting_date', sa.DateTime(), nullable=True, comment='DateTime when installment was posted to ledger'),
    sa.Column('ledger_posting_ref', sa.String(length=64), nullable=True, comment='Ledger Entry ID created when installment is posted'),
    sa.Column('amount_paid', sa.Numeric(precision=10, scale=2), nullable=False, comment='Amount paid against this installment'),
    sa.Column('payment_date', sa.Date(), nullable=False, comment='Date when payment was received'),
    sa.Column('is_archived', sa.Boolean(), nullable=True, comment='Flag indicating if the record is archived'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='Flag to keep track of record is active or not'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='User who created this record'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='User who last modified this record'),
    sa.Column('created_on', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='Timestamp when this record was created'),
    sa.Column('updated_on', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='Timestamp when this record was last updated'),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['loan_id'], ['driver_loans.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['modified_by'], ['users.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('installment_id'),
    sa.UniqueConstraint('loan_id', 'installment_number', name='uq_loan_installment')
    )
    op.create_index('idx_installment_dates', 'driver_loan_installments', ['week_start_date', 'week_end_date'], unique=False)
    op.create_index('idx_installment_loan', 'driver_loan_installments', ['loan_id', 'status'], unique=False)
    op.create_index('idx_installment_status', 'driver_loan_installments', ['status'], unique=False)
    op.create_index(op.f('ix_driver_loan_installments_id'), 'driver_loan_installments', ['id'], unique=False)
    op.create_table('driver_loan_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('log_date', sa.DateTime(), nullable=False, comment='Date and Time of log entry'),
    sa.Column('log_type', sa.String(length=32), nullable=False, comment='Type of log: Create, Schedule, Post, StatusChange, Adjustment'),
    sa.Column('loan_id', sa.Integer(), nullable=True, comment='Reference to loan if applicable'),
    sa.Column('records_impacted', sa.Integer(), nullable=True, comment='Number of records affected'),
    sa.Column('status', sa.String(length=48), nullable=False, comment='Status: Success, Failure, Partial'),
    sa.Column('details', sa.Text(), nullable=True, comment='Additional details about the operation'),
    sa.Column('is_archived', sa.Boolean(), nullable=True, comment='Flag indicating if the record is archived'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='Flag to keep track of record is active or not'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='User who created this record'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='User who last modified this record'),
    sa.Column('created_on', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='Timestamp when this record was created'),
    sa.Column('updated_on', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='Timestamp when this record was last updated'),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['loan_id'], ['driver_loans.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['modified_by'], ['users.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_driver_loan_logs_id'), 'driver_loan_logs', ['id'], unique=False)
    op.create_index(op.f('ix_driver_loan_logs_log_date'), 'driver_loan_logs', ['log_date'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_driver_loan_logs_log_date'), table_name='driver_loan_logs')
    op.drop_index(op.f('ix_driver_loan_logs_id'), table_name='driver_loan_logs')
    op.drop_table('driver_loan_logs')
    op.drop_index(op.f('ix_driver_loan_installments_id'), table_name='driver_loan_installments')
    op.drop_index('idx_installment_status', table_name='driver_loan_installments')
    op.drop_index('idx_installment_loan', table_name='driver_loan_installments')
    op.drop_index('idx_installment_dates', table_name='driver_loan_installments')
    op.drop_table('driver_loan_installments')
    op.drop_index(op.f('ix_driver_loans_loan_id'), table_name='driver_loans')
    op.drop_index(op.f('ix_driver_loans_id'), table_name='driver_loans')
    op.drop_index('idx_driver_loan_status', table_name='driver_loans')
    op.drop_index('idx_driver_loan_medallion', table_name='driver_loans')
    op.drop_index('idx_driver_loan_driver', table_name='driver_loans')
    op.drop_table('driver_loans')
    # ### end Alembic commands ###
